<?php

/**
 * @file
 * Tide Publication.
 */

use Drupal\Core\Entity\EntityTypeInterface;
use Drupal\Core\Field\FieldStorageDefinitionInterface;
use Drupal\tide_publication\TidePublicationFieldStorageDefinition;
use Drupal\tide_publication\TidePublicationPageItemList;
use Drupal\tide_publication\TidePublicationPageNavigationItemList;

/**
 * Implements hook_entity_bundle_field_info().
 */
function tide_publication_entity_bundle_field_info(EntityTypeInterface $entity_type, $bundle, array $base_field_definitions) {
  $fields = [];
  if ($entity_type->id() === 'node') {
    if ($bundle === 'publication') {
      $fields['publication_pages'] = TidePublicationFieldStorageDefinition::create('entity_reference')
        ->setLabel(t('Publication pages'))
        ->setComputed(TRUE)
        ->setClass(TidePublicationPageItemList::class)
        ->setReadOnly(FALSE)
        ->setInternal(FALSE)
        ->setCardinality(FieldStorageDefinitionInterface::CARDINALITY_UNLIMITED)
        ->setSettings([
          'handler' => 'default:node',
          'handler_settings' => [
            'target_bundles' => [
              'publication_page' => 'publication_page',
            ],
          ],
        ])
        ->setDisplayOptions('view', [
          'label' => 'hidden',
          'region' => 'hidden',
          'weight' => 100,
        ])
        ->setDisplayOptions('form', [
          'label' => 'hidden',
          'region' => 'hidden',
          'weight' => 100,
        ])
        ->setTargetEntityTypeId($entity_type->id())
        ->setTargetBundle('publication')
        ->setName('publication_pages')
        ->setDisplayConfigurable('form', FALSE)
        ->setDisplayConfigurable('view', FALSE);
    }
    elseif ($bundle === 'publication_page') {
      $fields['publication_navigation_prev'] = TidePublicationFieldStorageDefinition::create('entity_reference')
        ->setLabel(t('Publication Navigation Prev'))
        ->setComputed(TRUE)
        ->setClass(TidePublicationPageNavigationItemList::class)
        ->setReadOnly(FALSE)
        ->setInternal(FALSE)
        ->setCardinality(1)
        ->setSettings([
          'handler' => 'default:node',
          'handler_settings' => [
            'target_bundles' => [
              'publication_page' => 'publication_page',
            ],
          ],
        ])
        ->setDisplayOptions('view', [
          'label' => 'hidden',
          'region' => 'hidden',
          'weight' => 100,
        ])
        ->setDisplayOptions('form', [
          'label' => 'hidden',
          'region' => 'hidden',
          'weight' => 100,
        ])
        ->setTargetEntityTypeId($entity_type->id())
        ->setTargetBundle('publication_page')
        ->setName('publication_navigation_prev')
        ->setDisplayConfigurable('form', FALSE)
        ->setDisplayConfigurable('view', FALSE);

      $fields['publication_navigation_next'] = clone $fields['publication_navigation_prev'];
      $fields['publication_navigation_next']->setLabel('Publication Navigation Next')->setName('publication_navigation_next');
    }
  }

  return $fields;
}
